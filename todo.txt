Changes to do
*************

Légende
*******
- en cours
V fait
T à tester
A annulé (voir raison en comm)
R Inclure dans le rapport
! problème (voir commentaire(s))
* Commentaire
C Changement cosmétique ou ergonomie

DÉPENDANCES (Les sous-dépendances sont gérées par PIP)
***********

Django 1.7.x
//django-bootstrap3 (optionnel)
django-bootstrap-breadcrumbs
django-modeltranslation (checker si optionnel)
django-simple-math-captcha
django-countries
djangorestframework
django-admin2
GeoPy

SITE
****

- Ajouter numero de telephone à:
	* Utilisateurs
	* Entreprises
- Permettre le changement de catégorie sur la vue ticket
    * Attention à la sous catégorie... (la mettre à null si catégorie parente est changée)
- Faire en sorte que le formulaire de contact fonctionne vraiment
    - Ce formulaire doit envoyer un mail à tous les gestionnaires et admins
- Création manuelle de compte ? (risque de spam et de faux comptes)
    * Solution alternative: rendre cette création de compte optionnelle. (toggle dans les options)
    * Faire le formulaire
    * Backend
- Débroussailler le code en général (best practices, etc...)

V Permettre de changer l'assignation d'une entreprise à un ticket via vue ticket (manager+ only)
    * Besoin de l'intégration de GeoPy (google api) pour la distance
V Préparer le serveur REST pour Android
    * Pistes:
        V --> django rest framework : http://www.django-rest-framework.org/
        A django-piston : https://bitbucket.org/jespern/django-piston/wiki/Home
C Faire en sorte que les éléments "étage" et "bureau" n'apparaissent que si un bâtiment est sélectionné dans la création ticket.
    C Même chose sur la vue ticket
V La classe Company à 1-n catégorie(s) d'incident que l'entreprise peut résoudre
V Sur la vue ticket, le menu d'action apparaît même si le manager qui le visionne n'est pas gestionnaire de ce ticket.
V Un manager doit pouvoir aussi créer un ticket (pour lui-même)
    V Par contre, un manager ne peut pas créer de ticket pour un utilisateur ou un autre manager (protection contre la falsification)
V Flexibilité de l'appli
    V Ajout de nouvelles catégories d'incidents à la volée (popup? Nouveau formulaire?)
        * Via interface admin. Un user ne peut pas ajouter une (sous-)catégorie lui-même (danger de spam, ...)
    V Ajout de nouveaux lieux et bâtiment à la volée (popup? Nouveau formulaire?)
        * Via un interface admin (manager+) OU via un bouton dans le menu "Créer... Lieu" dans la barre de nav (User+)
    * Ajout d'entreprises via admin panel (uniquement pour les managers et admins! Sinon anarchie)
    * Assignation d'entreprises à des catégories ticket réservée aux admins et managers (même raison que ci-dessus)
V Ajout partie commentaires sur vue ticket
    * Pourquoi? Interaction utilisateur et gestionnaire de son ticket
    V Mail envoyé au deux protagonistes lors d'un nouveau commentaire (voir module de mailing de django + créer compte mail pour l'occasion)
A Intégration google distance matrix API
    * Annulation: Utilisation de Geopy! La limite d'utilisation est bien plus grande et son utilisation beaucoup plus simple.
    * Elle sera utilisée pour calculer la distance entre le client et les entreprises potentiellement en mesure de régler le ticket.
    * Les limites d'utilisation de l'API nécéssitent un filtrage préalable des entreprises dans l'app web!
V Intégration de Geopy
    * Voir ci-dessus
    R Fonctionnement de GeoPy

Rapport TFE (+ toutes les entrées marquées R)
***********

- Authentication par token (+ header http, etc...)
- Bus event pour dissocier activité et opérations asynchrones (ex.: requête REST asynchrone (login, etc...))
- Approche POJO (transformation du JSON ou JSONSchema en objet Java lors de la lecture des données reçues par un web service)
    * http://engineering.meetme.com/2014/03/best-practices-for-consuming-apis-on-android/
- Ajouter un chapitre sur le fonctionnement de Geopy
    * GeoPy utilise les API de google maps, bing maps, etc..., donc plusieurs API en une seule.
    * Fonctionnement d'une query
- Django suit le modèle MVT et pas MVC
    * Source: http://lukeplant.me.uk/blog/posts/mvc-is-not-a-helpful-analogy-for-django/

Sources
*******
https://developers.google.com/api-client-library/python/ (Installation API google)
http://www.django-rest-framework.org/
http://square.github.io/otto/
http://engineering.meetme.com/2014/03/best-practices-for-consuming-apis-on-android/